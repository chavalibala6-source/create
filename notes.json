[
    {
        "page_number": 1,
        "title": "Flow control",
        "text": "<img src=\"static/uploads/multiple.png\">\r\n\r\nto check conditions on a name and age and respond differently. Let me give you a cleaner, more Pythonic version that avoids repetition and is easier to extend later:\r\n<pre><code class=\"language-python\">\r\ndef greet_user(name: str, age: int) -> None:\r\n    if name == \"Alice\":\r\n        print(\"Hi, Alice.\")\r\n    elif age < 12:\r\n        print(\"You are not Alice, kiddo.\")\r\n    elif age > 2000:\r\n        print(\"Unlike you, Alice is not an undead, immortal vampire.\")\r\n    elif age > 100:\r\n        print(\"You are not Alice, grannie.\")\r\n    else:\r\n        print(f\"Hello {name}, nice to meet you!\")\r\n\r\n# Example usage:\r\ngreet_user(\"Alice\", 11)    # Hi, Alice.\r\ngreet_user(\"Bob\", 10)      # You are not Alice, kiddo.\r\ngreet_user(\"Drac\", 2500)   # Unlike you, Alice is not an undead, immortal vampire.\r\ngreet_user(\"Eve\", 120)     # You are not Alice, grannie.\r\ngreet_user(\"Charlie\", 25)  # Hello Charlie, nice to meet you!\r\n</code></pre>\r\n\u2705 Improvements here:\r\n\r\n    Wrapped the logic in a function so it\u2019s reusable.\r\n\r\n    Added a default case (else) to handle normal names/ages.\r\n\r\n    Used f-strings for readability.\r\n\r\n    Clear order of conditions from most specific to general.\r\n\r\nDo you want me to also show you a dictionary-based mapping approach (cleaner for lots of names/conditions)?",
        "images": []
    },
    {
        "page_number": 2,
        "title": "while loop |for loop | if ",
        "text": "<pre>\r\ncode with if:\r\n</pre>\r\n<pre><code class=\"language-python\">\r\nspam = 0\r\nif spam < 5:\r\n    print('Hello, world.')\r\n    spam = spam + 1\r\n</code></pre>\r\n<pre>\r\n\u2705 This will run only once if spam < 5. The if statement checks the condition a single time, and if it\u2019s true, it executes the block once.\r\nUsing while to repeat:\r\n</pre>\r\n<pre><code class=\"language-python\">\r\nspam = 0\r\nwhile spam < 5:\r\n    print('Hello, world.')\r\n    spam = spam + 1\r\n</code></pre>\r\n<h1>\r\n\u2705 This will repeat as long as the condition spam < 5 is true.</h1>\r\n\r\n\r\n<p>\r\nExplanation of while:\r\n\r\n    Python checks the condition spam < 5.\r\n\r\n    If it is True, it executes the indented block:\r\n\r\n        Prints \"Hello, world.\"\r\n\r\n        Increments spam by 1\r\n\r\n    Then it goes back to step 1.\r\n\r\n    When spam becomes 5, the condition spam < 5 is False, and the loop ends.\r\n\r\nKey Points for while loops:\r\n\r\n    Indentation matters: All statements inside the loop must be indented.\r\n\r\n    Make sure the loop eventually ends: Otherwise, you get an infinite loop. In your case, spam = spam + 1 ensures the loop stops after 5 iterations.\r\n\r\n    Can be used to repeat any block of code while a condition is true.\r\n\r\n more compact version using while that prints the same without explicitly writing spam = spam + 1 \r\n\r\n</p>\r\n We can make your while loop more compact using the += operator, which is shorthand for adding and assigning. Here's how it looks:\r\n<pre><code class=\"language-python\">\r\nspam = 0\r\nwhile True:\r\n    if spam >= 5:\r\n        break\r\n    print('Hello, world.')\r\n    spam += 1\r\n</code></pre>\r\n    while True creates an infinite loop.\r\n\r\n    break stops the loop when the condition is met.\r\n\r\nIf you want, I can also show a version without manually incrementing spam at all, using range and for for comparison\u2014it\u2019s often cleaner than while.\r\n\r\n\r\nGreat! In Python, when you want to repeat something a fixed number of times, a for loop with range is often cleaner than a while loop. Here\u2019s how your example looks:\r\n<pre><code class=\"language-python\">\r\nfor spam in range(5):\r\n    print('Hello, world.')\r\n</code></pre>\r\n<p>\r\nExplanation:\r\n\r\n    range(5) generates the numbers 0, 1, 2, 3, 4.\r\n\r\n    Each number is assigned to spam in each iteration.\r\n\r\n    The loop runs exactly 5 times, printing \"Hello, world.\" each time.\r\n\r\n    No need to manually increment spam like in a while loop.\r\n\r\n\u2705 Advantages of for with range over while for fixed repetitions:\r\n\r\n    Cleaner and more readable.\r\n\r\n    Less chance of creating an infinite loop.\r\n\r\n    No manual counter management.\r\n</p>\r\n<div style=\"width: 500px; height: 300px; background-image: url('/static/uploads/2_Screenshot 2025-09-10 at 10.35.01 PM.png'); background-size: cover; background-repeat: no-repeat; background-position: center;\">\r\n    <h2 style=\"color: white; text-align: center; padding-top: 130px;\">Hello!</h2>\r\n  </div>",
        "images": [
            "2_Valid_Variable.png",
            "2_Screenshot 2025-09-10 at 10.35.01 PM.png"
        ]
    }
]